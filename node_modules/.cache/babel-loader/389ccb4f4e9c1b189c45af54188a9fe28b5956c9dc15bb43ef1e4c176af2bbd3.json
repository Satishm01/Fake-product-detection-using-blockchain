{"ast":null,"code":"var _jsxFileName = \"E:\\\\Major Project\\\\satish\\\\M_project_blockchain\\\\src\\\\components\\\\DeployContract.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeployContract = ({\n  account,\n  central\n}) => {\n  _s();\n  const [contractAddress, setContractAddress] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [updateStatus, setUpdateStatus] = useState(false);\n  function showErrorMessage(error) {\n    setLoading(false);\n    alert(`An error occurred while connecting to MetaMask: ${error.message}`);\n  }\n  const fetchContractAddress = async () => {\n    try {\n      if (account) {\n        const address = await central.getCompanySmartContractAddress(account);\n        setContractAddress(address);\n      } else {\n        throw Error('Please check that you are connected to a wallet');\n      }\n    } catch (error) {\n      showErrorMessage(error);\n    }\n  };\n  const createContract = async () => {\n    try {\n      if (account) {\n        setUpdateStatus(\"Validate the transaction through your wallet\");\n        let transaction = await central.createSmartContract();\n        setLoading(true);\n        await transaction.wait();\n        await fetchContractAddress();\n        setUpdateStatus(\"Contract created \\n Address: \");\n        setLoading(false);\n      } else {\n        throw Error('Please check that you are connected to a wallet');\n      }\n    } catch (error) {\n      setLoading(false);\n      showErrorMessage(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeployContract\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Component__title\",\n      children: \"Create My Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button__toggle form__button\",\n      onClick: createContract,\n      children: \"Create Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Transaction in progress... It can take a few minutes \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [updateStatus, contractAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(DeployContract, \"4zL5BKqp1DiyHc0eHRHV4ZXjnCs=\");\n_c = DeployContract;\nexport default DeployContract;\nvar _c;\n$RefreshReg$(_c, \"DeployContract\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeployContract","account","central","_s","contractAddress","setContractAddress","loading","setLoading","updateStatus","setUpdateStatus","showErrorMessage","error","alert","message","fetchContractAddress","address","getCompanySmartContractAddress","Error","createContract","transaction","createSmartContract","wait","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Major Project/satish/M_project_blockchain/src/components/DeployContract.js"],"sourcesContent":["import React, {useState } from 'react'\r\n\r\nconst DeployContract = ({account, central}) => {\r\n\r\n    const [contractAddress, setContractAddress] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [updateStatus, setUpdateStatus] = useState(false);\r\n\r\n    function showErrorMessage(error) {\r\n        setLoading(false);\r\n        alert(`An error occurred while connecting to MetaMask: ${error.message}`);\r\n    }\r\n\r\n\r\n    const fetchContractAddress = async () => {\r\n        try{\r\n            if(account){\r\n                const address = await central.getCompanySmartContractAddress(account);\r\n                setContractAddress(address);\r\n            }else{\r\n                throw Error('Please check that you are connected to a wallet');\r\n            }\r\n        }catch(error){\r\n            showErrorMessage(error);\r\n        }\r\n    }\r\n\r\n\r\n    const createContract = async() =>{\r\n        try{\r\n            if(account){\r\n                setUpdateStatus(\"Validate the transaction through your wallet\");\r\n                let transaction = await central.createSmartContract();\r\n                setLoading(true);\r\n                await transaction.wait();\r\n                await fetchContractAddress();\r\n                setUpdateStatus(\"Contract created \\n Address: \");\r\n                setLoading(false);\r\n            }else{\r\n                throw Error('Please check that you are connected to a wallet');\r\n            }\r\n        }catch(error){\r\n            setLoading(false);\r\n            showErrorMessage(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className='DeployContract'>\r\n            <h3 className='Component__title'>Create My Contract</h3>\r\n            <button className='button__toggle form__button' onClick={createContract}>Create Contract</button>\r\n            {loading  ? (\r\n                <div>Transaction in progress... It can take a few minutes </div>\r\n                ) : ( \r\n                <p>{updateStatus}{contractAddress}</p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeployContract;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAE3C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvD,SAASa,gBAAgBA,CAACC,KAAK,EAAE;IAC7BJ,UAAU,CAAC,KAAK,CAAC;IACjBK,KAAK,CAAE,mDAAkDD,KAAK,CAACE,OAAQ,EAAC,CAAC;EAC7E;EAGA,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAG;MACC,IAAGb,OAAO,EAAC;QACP,MAAMc,OAAO,GAAG,MAAMb,OAAO,CAACc,8BAA8B,CAACf,OAAO,CAAC;QACrEI,kBAAkB,CAACU,OAAO,CAAC;MAC/B,CAAC,MAAI;QACD,MAAME,KAAK,CAAC,iDAAiD,CAAC;MAClE;IACJ,CAAC,QAAMN,KAAK,EAAC;MACTD,gBAAgB,CAACC,KAAK,CAAC;IAC3B;EACJ,CAAC;EAGD,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAU;IAC7B,IAAG;MACC,IAAGjB,OAAO,EAAC;QACPQ,eAAe,CAAC,8CAA8C,CAAC;QAC/D,IAAIU,WAAW,GAAG,MAAMjB,OAAO,CAACkB,mBAAmB,CAAC,CAAC;QACrDb,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMY,WAAW,CAACE,IAAI,CAAC,CAAC;QACxB,MAAMP,oBAAoB,CAAC,CAAC;QAC5BL,eAAe,CAAC,+BAA+B,CAAC;QAChDF,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,MAAI;QACD,MAAMU,KAAK,CAAC,iDAAiD,CAAC;MAClE;IACJ,CAAC,QAAMN,KAAK,EAAC;MACTJ,UAAU,CAAC,KAAK,CAAC;MACjBG,gBAAgB,CAACC,KAAK,CAAC;IAC3B;EAEJ,CAAC;EAGD,oBACIZ,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BxB,OAAA;MAAIuB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxD5B,OAAA;MAAQuB,SAAS,EAAC,6BAA6B;MAACM,OAAO,EAAEV,cAAe;MAAAK,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChGrB,OAAO,gBACJP,OAAA;MAAAwB,QAAA,EAAK;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEhE5B,OAAA;MAAAwB,QAAA,GAAIf,YAAY,EAAEJ,eAAe;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA3DKH,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA6DpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}